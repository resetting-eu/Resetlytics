# Generated by Django 5.0 on 2024-01-30 19:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Indicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Q1", models.FloatField()),
                ("Q2", models.FloatField()),
                ("Q3", models.FloatField()),
                ("Q4", models.FloatField()),
                ("year_to_date", models.FloatField()),
                ("previous_year", models.FloatField()),
            ],
            options={
                "db_table": "indicator",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_number", models.PositiveIntegerField()),
                ("text", models.TextField()),
                ("text_translations", models.JSONField()),
            ],
            options={
                "db_table": "question",
            },
        ),
        migrations.CreateModel(
            name="QuestionBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField()),
                ("title_translations", models.JSONField()),
                ("scale_min", models.IntegerField()),
                ("scale_max", models.IntegerField()),
                (
                    "criterion",
                    models.CharField(
                        choices=[
                            ("Service", "Service"),
                            ("Environment", "Environment"),
                            ("Reservation", "Reservation"),
                            ("Technology", "Technology"),
                            ("Staff", "Staff"),
                            ("Sustainability", "Sustainability"),
                            ("Satisfaction", "Satisfaction"),
                            ("Demographics", "Demographics"),
                            ("Economic", "Economic"),
                            ("Social", "Social"),
                        ],
                        default="Service",
                        max_length=50,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Categorical - one", "Categorical One"),
                            ("Categorical - many", "Categorical Many"),
                            ("Ordinal", "Ordinal"),
                            ("Commentary", "Commentary"),
                        ],
                        default="Ordinal",
                        max_length=50,
                    ),
                ),
                ("count_questions", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "questionblock",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("legal_name", models.CharField(max_length=50)),
                ("commercial_name", models.CharField(max_length=50)),
                ("description", models.TextField()),
                (
                    "main_activity",
                    models.CharField(
                        choices=[
                            ("Hotel", "Hotel"),
                            ("Leisure activities", "Leisure"),
                            ("Local accommodation", "Local Accommodation"),
                        ],
                        default="Hotel",
                        max_length=50,
                    ),
                ),
                ("location", models.CharField(max_length=50)),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("Portugal", "Pt"),
                            ("Spain", "Sp"),
                            ("Greece", "Gr"),
                            ("Italy", "It"),
                        ],
                        default="Portugal",
                        max_length=50,
                    ),
                ),
                ("is_sme", models.BooleanField(default=True)),
                (
                    "survey_language",
                    models.CharField(
                        choices=[
                            ("English", "English"),
                            ("Portuguese", "Portuguese"),
                            ("Castelian", "Castelian"),
                            ("Greek", "Greek"),
                            ("Italian", "Italian"),
                        ],
                        default="English",
                        max_length=20,
                    ),
                ),
                (
                    "representative",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="organizations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "organization",
                "ordering": ["-country", "location"],
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="app.question",
                    ),
                ),
            ],
            options={
                "db_table": "answer",
            },
        ),
        migrations.AddField(
            model_name="question",
            name="question_block",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="app.questionblock",
            ),
        ),
        migrations.CreateModel(
            name="Questionnaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField()),
                ("introduction", models.TextField()),
                ("title_translations", models.JSONField()),
                ("introduction_translations", models.JSONField()),
                ("created_at", models.DateTimeField()),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="questionnaires",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "questionnaire",
            },
        ),
        migrations.AddField(
            model_name="questionblock",
            name="questionnaire",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questionblocks",
                to="app.questionnaire",
            ),
        ),
        migrations.CreateModel(
            name="Respondent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answered_at", models.DateTimeField()),
                ("IP_address", models.CharField(max_length=20)),
                (
                    "questions",
                    models.ManyToManyField(through="app.Answer", to="app.question"),
                ),
                (
                    "related_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respondents",
                        to="app.organization",
                    ),
                ),
            ],
            options={
                "db_table": "respondent",
            },
        ),
        migrations.AddField(
            model_name="answer",
            name="respondent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="answers",
                to="app.respondent",
            ),
        ),
        migrations.CreateModel(
            name="SentimentAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.organization",
                    ),
                ),
            ],
            options={
                "db_table": "sentiment",
            },
        ),
        migrations.CreateModel(
            name="SentimentMarks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("sentiment_at", models.DateField()),
                ("textblob", models.FloatField()),
                (
                    "textblob_outcome",
                    models.CharField(
                        choices=[
                            ("Positive", "Positive"),
                            ("Negative", "Negative"),
                            ("Neutral", "Neutral"),
                        ],
                        default="Positive",
                        max_length=50,
                    ),
                ),
                ("vader", models.FloatField()),
                (
                    "vader_outcome",
                    models.CharField(
                        choices=[
                            ("Positive", "Positive"),
                            ("Negative", "Negative"),
                            ("Neutral", "Neutral"),
                        ],
                        default="Positive",
                        max_length=50,
                    ),
                ),
                (
                    "sentiment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentimentmarks",
                        to="app.sentimentanalysis",
                    ),
                ),
            ],
            options={
                "db_table": "sentimentmarks",
            },
        ),
        migrations.CreateModel(
            name="Survey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField()),
                ("title_translations", models.JSONField()),
                ("introduction", models.TextField()),
                ("introduction_translations", models.JSONField()),
                ("created_at", models.DateTimeField()),
                ("access_url", models.URLField()),
                ("open_at", models.DateTimeField()),
                ("close_at", models.DateField()),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="surveys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "questionnaire",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.questionnaire",
                    ),
                ),
            ],
            options={
                "db_table": "survey",
            },
        ),
        migrations.CreateModel(
            name="ServiceQuality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "demographics",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_demographics",
                        to="app.indicator",
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_environment",
                        to="app.indicator",
                    ),
                ),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.organization",
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_reservation",
                        to="app.indicator",
                    ),
                ),
                (
                    "satisfaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_satisfaction",
                        to="app.indicator",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_service",
                        to="app.indicator",
                    ),
                ),
                (
                    "staff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_staff",
                        to="app.indicator",
                    ),
                ),
                (
                    "sustainability",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_sustainability",
                        to="app.indicator",
                    ),
                ),
                (
                    "technology",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="servicequalities_technology",
                        to="app.indicator",
                    ),
                ),
                (
                    "survey",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="servicequalities",
                        to="app.survey",
                    ),
                ),
            ],
            options={
                "db_table": "servicequality",
            },
        ),
        migrations.AddField(
            model_name="sentimentanalysis",
            name="survey",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sentimentanalysis",
                to="app.survey",
            ),
        ),
        migrations.CreateModel(
            name="AllSustainability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count_surveys", models.PositiveIntegerField()),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="allsustainabilities",
                        to="app.organization",
                    ),
                ),
                (
                    "survey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="allsustainabilities",
                        to="app.survey",
                    ),
                ),
            ],
            options={
                "db_table": "allsustainability",
            },
        ),
        migrations.CreateModel(
            name="AllServiceQuality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count_surveys", models.PositiveIntegerField()),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="allservicequalities",
                        to="app.organization",
                    ),
                ),
                (
                    "survey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="allservicequalities",
                        to="app.survey",
                    ),
                ),
            ],
            options={
                "db_table": "allservicequality",
            },
        ),
        migrations.CreateModel(
            name="Sustainability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "demographics",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sustainabilities_demographics",
                        to="app.indicator",
                    ),
                ),
                (
                    "economic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sustainabilities_economic",
                        to="app.indicator",
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sustainabilities_environment",
                        to="app.indicator",
                    ),
                ),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.organization",
                    ),
                ),
                (
                    "social",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sustainabilities_social",
                        to="app.indicator",
                    ),
                ),
                (
                    "survey",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sustainabilities",
                        to="app.survey",
                    ),
                ),
            ],
            options={
                "db_table": "sustainability",
            },
        ),
        migrations.CreateModel(
            name="Wordcloud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("words", models.CharField(max_length=50)),
                ("count_words", models.IntegerField()),
                ("from_at", models.DateField()),
                ("till_at", models.DateField()),
                (
                    "sentiment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wordclouds",
                        to="app.sentimentanalysis",
                    ),
                ),
            ],
            options={
                "db_table": "wordcloud",
            },
        ),
    ]
