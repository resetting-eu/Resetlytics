# Notice: We strongly recommend using Gunicorn behind a proxy server.
# https://docs.gunicorn.org/en/latest/deploy.html

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Logging settings
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    # SSL configuration
    # ssl_certificate /etc/nginx/ssl/resetlytics.crt;
    # ssl_certificate_key /etc/nginx/ssl/resetlytics.key;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers off;

    # Main server block (HTTP to HTTPS redirection)
    server {
        listen 80;
        # server_name localhost; # Change to your actual domain
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        #listen 443 ssl;
        listen 443;

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        # location /media/ {
        #     alias /usr/src/backend/media/;
        # }

        location ~^/be/ {
            proxy_pass http://127.0.0.1:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Disable insecure SSL/TLS protocols and ciphers
        # ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
}
}
